1 > create a package.json file manualy
2 > create a package.json file defulte structurely ( cmd " npm init -y) we will get a defulte structure
  ::: if use -y cmd & we creat a advance project befor upload this project - we make sure currect all description on json
3 > now we create a src folder & we creat a app.js or index.js (react use index.js) file  under src folder or under main project folder & ( app.js/index.js under src folder is stenderd way  ) || app.js or index.js is our main folder.


4 > 
 >> Now install webpack and babel 
 if we use only 
 cmd "npm install babel-core"
 then we get dependencies as below 
 "dependencies": {
    "babel-core": "^6.26.3"
  } // dependencies will send to production
  but if we use cmd "npm install babel-core   --save-dev",
  then we get devDependencies as below 
    "devDependencies": {
    "babel-core": "^6.26.3"
  } // devDependencies for only developers


npm install babel-core   --save-dev
npm install babel-loader   --save-dev
npm install babel-preset-env   --save-dev

npm install webpack   --save-dev
npm install webpack-cli   --save-dev

1 >> create a package.json file manualy
1.1, comand for npm insilizion
    npm init 
    (start set folowing stipes)
    resust >>
    {
  "name": "es6env",
  "version": "1.0.0",
  "description": "This is a test project",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
    },
  "author": "Ananda",
  "license": "MIT"
  }


    "entry point:" means which .js file is our main JS file for this project
    "keywords:" means what is our keyword for this project on npm, yern, boar etc comounity
    "license: "MIT"" is open sourse type license 

2 >> create a package.json file defulte structurely ( cmd " npm init -y)

    result >>
    {
  "name": "es6env",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}